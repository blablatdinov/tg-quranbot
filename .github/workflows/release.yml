# The MIT License (MIT).
#
# Copyright (c) 2018-2025 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.

name: Test and release

on:
  push:
    tags: "*"

jobs:
  checks:
    env:
      TZ: "Europe/Moscow"
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:17.2
        env:
          POSTGRES_USER: almazilaletdinov
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:8
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:3.13.7
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: user
          RABBITMQ_DEFAULT_PASS: pass
        options: --health-cmd "rabbitmqctl status" --health-interval 10s --health-timeout 5s --health-retries 5

    # uses: blablatdinov/tg-quranbot/.github/workflows/installing-dependencies.yml@master
    # uses: blablatdinov/tg-quranbot/.github/workflows/lint.yml@master

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: 'true'
    - name: Set up Python 3.14
      uses: actions/setup-python@v6
      with:
        python-version: "3.14.0"
    - name: Install Poetry
      uses: snok/install-poetry@v1.4.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: create .env file
      run: echo '${{ secrets.E2E_ENV_SETUP }}' > .env
    - name: Create telethon session
      run: echo "${{ secrets.TELETHON_SESSION }}" | base64 --decode > me.session
    - name: Run e2e tests
      run: .venv/bin/pytest src/tests/e2e -vv

  build-and-push:
    # needs: checks
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v5
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get tag name
        id: tag_name
        run: echo "::set-output name=TAG_NAME::$(echo ${GITHUB_REF#refs/tags/})"
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: blablatdinov/tg-quranbot:${{ steps.tag_name.outputs.TAG_NAME }}

  apply-migrations:
    needs: build-and-push
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14.0"
      - name: Install Dependencies
        run: |
          pip install yoyo-migrations==9.0.0 psycopg2-binary==2.9.9 setuptools==75.1.0
      - name: Fill yoyo.ini
        run: |
          echo '[DEFAULT]
          sources = migrations
          database = ${{ secrets.POSTGRES_URL }}
          batch_mode = on
          verbosity = 3' > yoyo.ini
      - name: Apply Migrations
        run: |
          yoyo apply

  update-remote-container:
    needs: build-and-push
    runs-on: ubuntu-24.04
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY}}
          known_hosts: '87.249.49.217 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDyRsXjQSzzB0b/g9mm1/ET01bx3BTUpm1DRLeG03UY7X+NfAQLskQWl7NP5rp8AVIwFmcRtiZo+Stle2Xo3wNCHRDFu0zU2RixTeelJ046Kcu6xSeIgwvi+OK1MaFPJwd1Em+U/aq624FNI7aJe05UCOy77W9Xa5TzKW3htG9ZLN0ykQ3AUEJ0ZnDLoOY1/4g4x1KqeRRnh61mwxGqzQ/kub/GVooKzfqrfY07/5E7hw3VLMZrQwuUhe9XJOZZjO/rObZdChmHxHwBsmprbYmWEjiRJRms4OZ70kVV7O2HjEVCkQQdtWrxhXzoDB4+oJq1STSEv9hEM2lpZERm1muTIYsLn3z4Ejget0iA/H5PJRLxRZs9y/q/vxptI/cX+VDKWstOQKu/Ic7v8LIhTe0mPUAHqp0eu60ZHp2JLpJ6pko9RptflM2cjPawINulmINOE43wrTzFhhhgrdxtYEt7dnCVAfooanbB9vYoH5LGBVOPxiqUnJzMvlJ0z9rpk/0='
      - name: Get tag name
        id: tag_name
        run: echo "::set-output name=TAG_NAME::$(echo ${GITHUB_REF#refs/tags/})"
      - name: Deploy with docker-compose on remote server
        run: |
          ssh www@87.249.49.217 'echo "Connected!"'
          ssh www@87.249.49.217 'cd /home/www/code/tg-quranbot/ && TAG_NAME=${{ steps.tag_name.outputs.TAG_NAME }} docker compose -f infra/docker-compose.prod.yml --env-file=.env up -d'

  change-pyproject-version:
    # needs: checks
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - run: |
          git fetch --tags --force && \
          latest=$(git tag --sort=creatordate | tail -1 | cut -c2-) && \
          sed -i '/^version = "/s/"[^"]*"/"'"$latest"'"/' pyproject.toml
      - uses: peter-evans/create-pull-request@v7
        with:
          branch: version-up
          commit-message: 'new version in pyproject.toml'
          delete-branch: true
          title: 'Up version in pyproject.toml'
          assignees: blablatdinov
          base: master
