name: Weekly check

on:
  schedule:
    - cron: '17 13 * * 2'
  workflow_dispatch:

jobs:
  checks:
    env:
      TZ: "Europe/Moscow"
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_USER: almazilaletdinov
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:3.12.4
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: user
          RABBITMQ_DEFAULT_PASS: pass
        options: --health-cmd "rabbitmqctl status" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12.4"
    - name: Install Poetry
      uses: snok/install-poetry@v1.3.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: create .env file
      run: echo '${{ secrets.E2E_ENV_SETUP }}' > .env
    - name: Create telethon session
      run: echo "${{ secrets.TELETHON_SESSION }}" | base64 --decode > me.session
    - name: Run e2e tests
      run: .venv/bin/pytest src/tests/e2e -vv
    - name: Check dependencies relevance
      run: .venv/bin/deltaver poetry.lock --format lock
