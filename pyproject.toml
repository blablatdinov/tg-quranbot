# The MIT License (MIT).
#
# Copyright (c) 2018-2025 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.

[tool.poetry]
name = "tg-quranbot"
version = "3.8.4"
description = ""
authors = ["Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>"]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
loguru = "0.7.3"
quranbot-schema-registry = "0.0.28"
sentry-sdk = "2.37.1"
httpx = "0.28.1"
pytz = "2025.2"
databases = {extras = ["asyncpg"], version = "0.9.0"}
attrs = "25.3.0"
jsonpath-ng = "1.7.0"
eo-styleguide = "0.0.1-a16"
redis = "5.3.1"
furl = "2.1.4"
eljson = "0.0.1"
python-dateutil = "2.9.0.post0"
aio-pika = "9.5.7"
apscheduler = "3.11.0"
jinja2 = "3.1.6"
ujson = "5.11.0"
pydantic-settings = "2.10.1"
more-itertools = "10.8.0"
lxml = "5.4.0"
prometheus-client = "0.23.1"

[tool.poetry.group.dev.dependencies]
# tests
pytest-cov = "7.0.0"
pytest = "8.4.2"
pytest-asyncio = "1.2.0"
pytest-mock = "3.15.1"
pytest-lazy-fixtures = "1.4.0"
pytest-randomly = "3.16.0"
pytest-retry = "1.7.0"
mutmut = "2.5.1"
respx = "0.22.0"
time-machine = "2.19.0"
fakeredis = "2.31.3"
telethon = "1.41.2"
psycopg2-binary = "2.9.10"
pika = "1.3.2"
hypothesis = "6.140.0"
# type checking
mypy = "1.18.2"
types-pytz = "2025.2.0.20250809"
types-redis = "4.6.0.20241004"
types-pytest-lazy-fixture = "0.6.3.20240707"
types-python-dateutil = "2.9.0.20250822"
types-ujson = "5.10.0.20250822"
asyncpg-stubs = "0.30.2"
# style checks
wemake-python-styleguide = { git = "https://github.com/wemake-services/wemake-python-styleguide", branch="master" }
ruff = "0.12.12"
ondivi = "0.7.2"
flake8-final = "0.0.3"
flake8-override = "0.1.0"
flake8-no-json = "0.0.2"
vulture = "2.14"
sqlfluff = "3.4.2"
flake8-no-private-methods = "0.0.1"
# other
deltaver = "0.2.3"
yoyo-migrations = "9.0.0"
faker = "37.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
skip-string-normalization = true

[tool.pytest.ini_options]
filterwarnings = [
  "error::DeprecationWarning",
  "error::pytest.PytestUnknownMarkWarning",
  "error::pytest.PytestUnraisableExceptionWarning",
]
asyncio_mode = "auto"
addopts = [
  "--doctest-modules",
]
markers = [
  "tg_button: tests that check the behavior of buttons",
]

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true

[tool.sqlfluff.core]
max_line_length = 120

[tool.ruff]
# TODO #360:30min Поднять python target-version до "py312"
target-version = "py311"
line-length = 120
preview = true
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]
preview = true
fixable = [
  "F401",   # Unused import
  "I001",   # Import block is un-sorted or un-formatted
]
ignore = [
  "ANN101",  # Missing type annotation for `self` in method
  "ANN102",  # Missing type annotation for `cls` in classmethod
  "ARG001",  # Unused function argument
  "ARG002",  # Unused method argument
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D203",    # no-blank-line-before-class
  "D213",    # multi-line-summary-first-line
  "D418",    # Function decorated with `@overload` shouldn't contain a docstring
  "DOC201",  # `return` is not documented in docstring
  "DOC501",  # Check by flake8-docstrings
  "FBT001",  # Boolean-typed positional argument in function definition
  "FBT002",  # Boolean-typed positional argument in function definition
  "FIX002",  # Line contains T0DO, consider resolving the issue
  "FLY002",  # We not use f-strings
  "INP001",  # File ... is part of an implicit namespace package. Add an `__init__.py`.
  "RUF100",  # WPS primary linter
  "RUF001",  # Project contain cyrillic symbols
  "RUF002",  # Project contain cyrillic symbols
  "RUF003",  # Project contain cyrillic symbols
  "RET505",  # Unnecessary `elif` after `return` statement
  "RET506",  # Unnecessary `elif` after `raise` statement
  "UP030",   # We use explicit references
  "UP032",   # We not use f-strings
  "UP004",   # Class `PrayerReaction` inherits from `object`
  "TD",      # "t0do" formats
  "TC001",   # Move application import `...` into a type-checking block
  "TC002",   # Move third-party import into a type-checking block
  "PLR630",  # We not respect staticmethods
  "G001",    # Only .format for strings
  "TRY400",  # logger.error enable
  "PLE1205", # Too many arguments for `logging` format string
]
external = [
  "WPS",
  "FIN",
  "PEO",
  "OVR",
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.pylint]
max-args = 6

[tool.ruff.lint.per-file-ignores]
"src/integrations/tg/tg_answers/__init__.py" = ["F401"]
"src/tests/*" = [
  "S101",    # use of `assert` detected
  "D",       # Docstrings
  "ANN",     # Annotations
  "PLR2004", # Magic value
  "PLR0913", # Too many arguments to function call
]

[tool.deltaver]
fail_on_avg = 50
fail_on_max = 180
excluded = [
  "smmap",  # https://github.com/gitpython-developers/gitdb
  # ondivi 0.4.1
  # └── gitpython >=2.1.15
  #     └── gitdb >=4.0.1,<5
  #         └── smmap >=3.0.1,<6
  "mutmut",
  # pyjwt updated in master branch, but not released
  # https://github.com/redis/redis-py/commit/fdfc0d2ff41687e7b77c794101114f47d9d5a560
  "pyjwt",
  # redis 5.3.0 Python client for Redis database and key-value store
  # └── pyjwt >=2.9.0,<2.10.0
]


[tool.mutmut]
paths_to_mutate="src/app_types/,src/db/,src/exceptions/,src/handlers/,src/integrations/,main.py,quranbot_answer.py,schedule_app.py,src/services/,src/settings/,src/srv/"
runner="pytest src/tests/unit src/tests/it -x -q --tb=no -o addopts=''"
tests_dir="src/tests/unit,src/tests/it"
