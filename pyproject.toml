# The MIT License (MIT).
#
# Copyright (c) 2023-2025 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.

[tool.poetry]
name = "revive-code-bot"
version = "0.1.0"
description = ""
authors = ["Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
gitpython = "3.1.44"
gunicorn = "23.0.0"
psycopg = "3.2.5"
django = "5.1.6"
django-environ = "0.12.0"
pygithub = "2.6.1"
pyyaml = "6.0.2"
attrs = "25.1.0"
lxml = "5.3.1"
cron-validator = "1.0.8"
sentry-sdk = {extras = ["django"], version = "^2.19.2"}
whitenoise = "6.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "8.3.4"
ruff = "0.9.9"
wemake-python-styleguide = "1.0.0"
refurb = "2.0.0"
pytest-cov = "6.0.0"
pytest-django = "4.10.0"
time-machine = "2.16.0"
model-bakery = "1.20.4"
faker = "36.1.1"
mypy = "1.15.0"
django-stubs = {extras = ["compatible-mypy"], version = "5.1.3"}
lxml-stubs = "0.5.1"
types-requests = "2.32.0.20241016"
requests-mock = "1.12.1"
pytest-randomly = "3.16.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
line_length = 119
skip = ["migrations/*.py", ".venv"]
multi_line_output = 3
include_trailing_comma = true

[tool.ruff]
target-version = "py311"  # TODO: up to 3.12
line-length = 120
preview = true
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]
preview = true
fixable = [
  "F401",   # Unused import
  "Q000",   # Quotes
  "COM812", # Trailing comma missing
]
ignore = [
  "ARG001",  # Unused function argument
  "ARG002",  # Unused method argument
  "D106",    # Missing docstring in public nested class
  "D203",    # no-blank-line-before-class
  "D213",    # multi-line-summary-first-line
  "D401",    # First line of docstring should be in imperative mood
  "D418",    # Function decorated with `@overload` shouldn't contain a docstring
  "FBT001",  # Boolean-typed positional argument in function definition
  "FBT002",  # Boolean-typed positional argument in function definition
  "FIX002",  # Line contains TODO, consider resolving the issue
  "FLY002",  # We not use f-strings
  "RUF100",  # WPS primary linter
  "RUF001",  # Project contain cyrillic symbols
  "RUF002",  # Project contain cyrillic symbols
  "RET505",  # Unnecessary `elif` after `return` statement
  "RET506",  # Unnecessary `elif` after `raise` statement
  "UP030",   # We use explicit references
  "UP032",   # We not use f-strings
  "UP004",   # Class `PrayerReaction` inherits from `object`
  "TD",      # "todo" formats
  "PLR630",  # We not respect staticmethods "TCH003",  # Move standard library import `os.PathLike` into a type-checking block
  "DOC201",  # `return` is not documented in docstrin
  "DOC501",  # Raised exception `UnreachebleCaseError` missing from docstring
  "DOC402",  # `yield` is not documented in docstring
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.pylint]
max-args = 6

[tool.ruff.lint.per-file-ignores]
"src/tests/*" = [
  "S101",    # use of `assert` detected
  "INP001",  # File `...` is part of an implicit namespace package.
  "D",       # Docstrings
  "ANN",     # Annotations
  "PLR2004", # Magic value
  "PLR0913", # Too many arguments to function call
]
"*/migrations/*" = [
  "D100",
  "CPY001",
  "D101",
  "RUF012",
]

[tool.refurb]
ignore = [184]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
markers = [
  "integration: integration tests",
]

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
mypy_path = "src"

[tool.django-stubs]
django_settings_module = "config.settings"
