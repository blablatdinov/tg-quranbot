# The MIT License (MIT).
#
# Copyright (c) 2018-2025 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.
---
version: "3.3"

services:
  qbot:
    image: blablatdinov/tg-quranbot:${TAG_NAME}
    command: .venv/bin/python main.py run_polling
    restart: always
    ports:
      - "9091:9091"
    environment:
      - API_TOKEN=${API_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=${DEBUG}
      - REDIS_DSN=${REDIS_DSN}
      - SENTRY_DSN=${SENTRY_DSN}
      - ADMIN_CHAT_IDS=${ADMIN_CHAT_IDS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - RAMADAN_MODE=${RAMADAN_MODE}
    logging:
      driver: "json-file"
      options:
        labels: "app=qbot,job=qbot,service=telegram"
        tag: "qbot-{{.Name}}"

  event_receiver:
    image: blablatdinov/tg-quranbot:${TAG_NAME}
    command: .venv/bin/python main.py receive_events
    restart: always
    environment:
      - API_TOKEN=${API_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=${DEBUG}
      - REDIS_DSN=${REDIS_DSN}
      - SENTRY_DSN=${SENTRY_DSN}
      - ADMIN_CHAT_IDS=${ADMIN_CHAT_IDS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - RAMADAN_MODE=${RAMADAN_MODE}
    logging:
      driver: "json-file"
      options:
        labels: "app=event_reciever,service=events"
        tag: "event_reciever-{{.Name}}"

  scheduler:
    image: blablatdinov/tg-quranbot:${TAG_NAME}
    command: .venv/bin/python scheduler_entry.py
    restart: always
    environment:
      - API_TOKEN=${API_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=${DEBUG}
      - REDIS_DSN=${REDIS_DSN}
      - SENTRY_DSN=${SENTRY_DSN}
      - ADMIN_CHAT_IDS=${ADMIN_CHAT_IDS}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - RAMADAN_MODE=${RAMADAN_MODE}

  loki:
    image: grafana/loki:3.5.5
    ports:
      - "3100:3100"
    volumes:
      - ../loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.15
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  grafana-storage:
  loki_data:
